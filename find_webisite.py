from selenium import webdriver
from selenium.webdriver.common.by import By

# 定义要获取Repositories的GitHub作者名
github_author_list=['lidofinance', 'maticnetwork', 'makerdao', 'curvefi', 'convex-eth', 'Uniswap', 'instadapp', 'anyswap', 'compound-finance', 'balancer', 'FraxFinance', 'VenusProtocol', 'gmx-io', 'aurafinance', 'liquity', 'sushiswap', 'stargate-protocol', 'ArrakisFinance', 'dydxprotocol', 'alpaca-finance', 'beefyfinance', 'polynetwork', 'euler-xyz', 'chainsulting', 'NexusMutual', 'synapsecns', 'vvs-finance', 'Ankr-network', 'defisaver', 'stakewise', 'amptoken', 'Benqi-fi', 'Gearbox-protocol', 'SpookySwap', 'axelarnetwork', 'AlphaFinanceLab', 'beethovenxfi', 'hop-protocol', 'sushiswap', 'AladdinDAO', 'enzymefinance', 'traderjoe-xyz', 'helio-money', 'tetu-io', 'tranchess', 'flamincome', 'originprotocol', 'OlympusDAO', 'RelayChain', 'orgs', 'pooltogether', 'ribbon-finance', 'Badger-Finance', 'Tokemak', 'Idle-Finance', 'ApeSwapFinance', 'Equalizer-Exchange', 'KlimaDAO', 'rav-ipor', 'dforce-network', 'pnetwork-association', 'traderjoe-xyz', 'sonne-finance', 'ToucanProtocol', 'renproject', 'backstop-protocol', 'dopex-io', 'cian-ai', 'tarot-finance', 'ibdotxyz', 'GammaStrategies', 'reflexer-labs', 'stakely-protocol', 'SharedStake', 'pendle-finance', 'okex', 'HectorNetwork', 'okex', 'IzumiFinance', 'spartacus-finance', 'NFTX-project', 'ellipsis-finance', 'broxus', 'SashimiProject', 'orgs', 'AztecProtocol', 'mimo-capital', 'ArthSwap', 'Solo-Top', 'RageTrade', 'harvest-finance', 'defifranc', 'level-fi', 'vesperfi', 'mummy-finance', 'swappidex', 'StrikeFinance', 'thisisarchimedes', 'DeltaPrimeLabs', 'cowri', 'wrappedfi', 'hegic', 'meterio', 'traderjoe-xyz', 'pickle-finance', 'mstable', 'saddle-finance', 'Layer3Org', 'hundred-finance', 'NFTfi-Genesis', 'Risk-Harbor', 'threshold-network', 'MaverickHP', 'app-helmet-insure', 'Rari-Capital', 'mimoprotocol', 'InverseFinance', 'InjectiveLabs', 'revert-finance', 'planetfinance?tab=repositories', 'PancakeBunny-finance', 'deusfinance', 'Premian-Labs', 'sherlock-protocol', 'yieldprotocol', 'kava-labs', 'pangea-protocol', 'titanofinance', 'orionprotocol', 'klaybank', 'saulgoodmandev', '1inch', 'connext', 'dotdot-ellipsis', 'metavaultorg', 'Voltz-Protocol', 'easeDeFi', 'peckshield', 'AstridDAO', 'sablierhq', 'bumper-dao', 'threshold-network', '1Hive', 'persistenceOne', 'Impermax-Finance', 'idexio', 'back-finance', 'AVaultFinance', 'mycelium-ethereum', 'Horizon-Protocol', 'sushiswap', 'Azuro-protocol', 'SiO2-Finance', 'ZooFarming', 'CreamFi', 'element-fi', 'erasureprotocol', 'starlay-finance', 'kagla-finance', 'xtokenmarket', 'umee-network', 'bitcoin-portal', 'hakkafinance', 'SiriusFinance', 'claimswap', 'ChannelsFinance', 'wigoswap', 'tender-finance', 'dao', 'OpenLeverageDev', 'tenfinance', 'LlamaPay', 'OpiumProtocol', 'equilibria-xyz', 'bolide-fi', 'thesixnetwork', 'quollfi', 'BoringDAO', 'peckshield', 'gysr-io', 'autonomoussoftware', 'Arbi-s', 'article-i', '0xcap', 'sudoswap', 'BenTokenFinance', 'El-Dorado-Exchange', 'marginswap', 'goldfinch-eng', 'TidalFinance', 'IntegralHQ', 'HydroProtocol', 'l2labs', 'annexfinance', 'zoomswap', 'Snowball-Finance', 'MarsEcosystem', 'sushiswap', 'NestedFinance', '88mphapp', 'pie-dao', 'autonomoussoftware', 'eepdev', 'swaap-labs', 'superfluid-finance', 'zkasino', '1hive', 'PaladinFinance', 'sirenmarkets', 'swapfish', 'moon-migration', 'merofinance', 'cycloneprotocol', 'goosedefi', 'perp88', 'Arbswap-Official', 'Tenderize', 'donkey-fund', 'bearn-defi', 'hazelnutcloud', 'baofinance', 'solidex-fantom', 'CrodexApp', 'COMB-Protocol', 'thefortube', 'pods-finance', 'zenlinkpro', 'trusttoken', 'SoyFinance', 'symbiosis-finance', 'openocean-finance', 'gyro-defi', 'gfx-labs', 'LendFlare', 'MoreMoney-Finance', 'exactly', 'debridge-finance', 'valuedefi', 'CubFinance', 'goledo-finance', 'indexed-finance', 'Snowball-Finance', 'celo-org', 'Phuture-finance', '', 'charmfinance', 'cometh-game', 'alchemistcoin', 'HalbornSecurity', 'cronaswap', 'ZunamiProtocol', 'IzumiFinance', 'jejopl', 'yujiym', 'sense-finance', 'Steemhunt', 'viaMover', 'HyperJump-DeFi', 'winery-land', 'mstable', 'sushiswap', 'TemplarDAO', 'CoinSwap-Space', 'ComposableFi', 'ImpossibleFinance', 'clearpool-finance', 'GumBallProtocol', 'APWine', 'baofinance', 'OmegaSyndicate', 'Midas-Protocol', 'ape-fi', 'MakiSwap-Protocol', 'dinosaur-eggs', 'kswap-finance', 'powerpool-finance', 'alwaysbegrowing', 'VovoFinance', 'TheOtherCrypto', 'Landshare-io', 'yaxis-project', 'kogecoin', 'Bridge-Mutual', 'tranche-jibrel', 'antefinance', 'outdoteth', 'router-protocol', 'HunnyFinance', 'InverseFinance', 'DEFI-Foundation', 'chee-finance', 'percent-finance', 'FloatProtocol', 'tracer-protocol', 'scion-finance', 'autoshark-finance', 'Zircon-Finance', 'neptune-mutual-blue', 'moonpotdev', 'RoeFinance', 'WardenSwap', 'unioncredit', 'Basis-Cash', 'pods-finance', 'thealphadex', 'xDollar-Finance', 'darkcryptofinance', 'evolutionlandorg', 'AlkemiNetwork', 'tempus-finance', 'metavaultorg', 'mysofinance', 'ShieldDAODev', 'HedgeFarm', 'elysia-dev', 'RAMP-DEFI', 'TravaFinance', 'OpenSky-Finance', 'UnshETH?type=source', 'Uno-Re', 'EMISWAP-COM', 'unbound-finance', 'Axion-Network', 'EnterDAO', 'polydex-fi', 'DAM-Finance', 'wasabi-swap-team', 'nsure-tech', 'PureSwap2020', 'luckychip-io', 'yam-finance', 'LfgSwap', 'HebePlatform', 'CubFinance', 'AelinXYZ', 'olive-cash', 'Phoenix-Finance', 'peckshield', 'rehold-io', 'SynFutures', 'SynFutures', 'CompliFi', 'UnlockdFinance', 'clober-dex', 'DoppleFinance', 'ApeRocket-Labs', 'Float-Capital', 'PotluckProtocol', 'oddz-finance', 'lienfinance', 'CookFinance', 'opty-fi', 'Timeswap-Labs', 'lindy-labs', 'ADAOTOP', 'steakbankfinance', 'KassandraFinance', 'bamboo-defi', 'baofinance', 'nomad-xyz', 'wowswap-io', 'centfinance', 'complusnetwork', 'huckleberrydex', 'gooberxyz', 'CoffinFinance', 'ethalend', 'VendorFinance', 'darkcryptofinance', 'YetiSwap', 'DeHive-finance', 'PolkaEX', 'thiagomva', 'eightwoods']
# 创建一个Chrome浏览器对象
driver = webdriver.Chrome()


# 打开GitHub作者Repositories页面
# 使用 for 循环遍历 github_author_list 中的每个字符串
with open("C:/Users/卢俊杰/Desktop/项目/项目1/repo_links.txt", "w") as file:
    for github_author in github_author_list:
        url = f'https://github.com/orgs/{github_author}/repositories'
        driver.get(url)

        print("\"")
        file.write("\"")
        # 找到Repositories列表中所有的<a>标签，并将链接写入文件
        for link in driver.find_elements(By.CSS_SELECTOR, 'h3 a'):
            repo_link = link.get_attribute('href')
            print(repo_link+',')

        file.write("\"")
        print("\""+",")
# 关闭浏览器
driver.quit()
